module SkelC where

-- Haskell module generated by the BNF converter

import AbsC
import ErrM
type Result = Err String

failure :: Show a => a -> Result
failure x = Bad $ "Undefined case: " ++ show x

transIdent :: Ident -> Result
transIdent x = case x of
  Ident string -> failure x
transUnsigned :: Unsigned -> Result
transUnsigned x = case x of
  Unsigned string -> failure x
transLong :: Long -> Result
transLong x = case x of
  Long string -> failure x
transUnsignedLong :: UnsignedLong -> Result
transUnsignedLong x = case x of
  UnsignedLong string -> failure x
transHexadecimal :: Hexadecimal -> Result
transHexadecimal x = case x of
  Hexadecimal string -> failure x
transHexUnsigned :: HexUnsigned -> Result
transHexUnsigned x = case x of
  HexUnsigned string -> failure x
transHexLong :: HexLong -> Result
transHexLong x = case x of
  HexLong string -> failure x
transHexUnsLong :: HexUnsLong -> Result
transHexUnsLong x = case x of
  HexUnsLong string -> failure x
transOctal :: Octal -> Result
transOctal x = case x of
  Octal string -> failure x
transOctalUnsigned :: OctalUnsigned -> Result
transOctalUnsigned x = case x of
  OctalUnsigned string -> failure x
transOctalLong :: OctalLong -> Result
transOctalLong x = case x of
  OctalLong string -> failure x
transOctalUnsLong :: OctalUnsLong -> Result
transOctalUnsLong x = case x of
  OctalUnsLong string -> failure x
transCDouble :: CDouble -> Result
transCDouble x = case x of
  CDouble string -> failure x
transCFloat :: CFloat -> Result
transCFloat x = case x of
  CFloat string -> failure x
transCLongDouble :: CLongDouble -> Result
transCLongDouble x = case x of
  CLongDouble string -> failure x
transProgram :: Program -> Result
transProgram x = case x of
  Progr externaldeclarations -> failure x
transExternal_declaration :: External_declaration -> Result
transExternal_declaration x = case x of
  Afunc functiondef -> failure x
  Global dec -> failure x
transFunction_def :: Function_def -> Result
transFunction_def x = case x of
  OldFunc declarationspecifiers declarator decs compoundstm -> failure x
  NewFunc declarationspecifiers declarator compoundstm -> failure x
  OldFuncInt declarator decs compoundstm -> failure x
  NewFuncInt declarator compoundstm -> failure x
transDec :: Dec -> Result
transDec x = case x of
  NoDeclarator declarationspecifiers -> failure x
  Declarators declarationspecifiers initdeclarators -> failure x
transDeclaration_specifier :: Declaration_specifier -> Result
transDeclaration_specifier x = case x of
  Type typespecifier -> failure x
  Storage storageclassspecifier -> failure x
  SpecProp typequalifier -> failure x
transInit_declarator :: Init_declarator -> Result
transInit_declarator x = case x of
  OnlyDecl declarator -> failure x
  InitDecl declarator initializer -> failure x
transType_specifier :: Type_specifier -> Result
transType_specifier x = case x of
  Tvoid -> failure x
  Tchar -> failure x
  Tshort -> failure x
  Tint -> failure x
  Tlong -> failure x
  Tfloat -> failure x
  Tdouble -> failure x
  Tsigned -> failure x
  Tunsigned -> failure x
  Tstruct structorunionspec -> failure x
  Tenum enumspecifier -> failure x
  Tname -> failure x
transStorage_class_specifier :: Storage_class_specifier -> Result
transStorage_class_specifier x = case x of
  MyType -> failure x
  GlobalPrograms -> failure x
  LocalProgram -> failure x
  LocalBlock -> failure x
  LocalReg -> failure x
transType_qualifier :: Type_qualifier -> Result
transType_qualifier x = case x of
  Const -> failure x
  NoOptim -> failure x
transStruct_or_union_spec :: Struct_or_union_spec -> Result
transStruct_or_union_spec x = case x of
  Tag structorunion ident structdecs -> failure x
  Unique structorunion structdecs -> failure x
  TagType structorunion ident -> failure x
transStruct_or_union :: Struct_or_union -> Result
transStruct_or_union x = case x of
  Struct -> failure x
  Union -> failure x
transStruct_dec :: Struct_dec -> Result
transStruct_dec x = case x of
  Structen specquals structdeclarators -> failure x
transSpec_qual :: Spec_qual -> Result
transSpec_qual x = case x of
  TypeSpec typespecifier -> failure x
  QualSpec typequalifier -> failure x
transStruct_declarator :: Struct_declarator -> Result
transStruct_declarator x = case x of
  Decl declarator -> failure x
  Field constantexpression -> failure x
  DecField declarator constantexpression -> failure x
transEnum_specifier :: Enum_specifier -> Result
transEnum_specifier x = case x of
  EnumDec enumerators -> failure x
  EnumName ident enumerators -> failure x
  EnumVar ident -> failure x
transEnumerator :: Enumerator -> Result
transEnumerator x = case x of
  Plain ident -> failure x
  EnumInit ident constantexpression -> failure x
transDeclarator :: Declarator -> Result
transDeclarator x = case x of
  BeginPointer pointer directdeclarator -> failure x
  NoPointer directdeclarator -> failure x
transDirect_declarator :: Direct_declarator -> Result
transDirect_declarator x = case x of
  Name ident -> failure x
  ParenDecl declarator -> failure x
  InnitArray directdeclarator constantexpression -> failure x
  Incomplete directdeclarator -> failure x
  NewFuncDec directdeclarator parametertype -> failure x
  OldFuncDef directdeclarator idents -> failure x
  OldFuncDec directdeclarator -> failure x
transPointer :: Pointer -> Result
transPointer x = case x of
  Point -> failure x
  PointQual typequalifiers -> failure x
  PointPoint pointer -> failure x
  PointQualPoint typequalifiers pointer -> failure x
transParameter_type :: Parameter_type -> Result
transParameter_type x = case x of
  AllSpec parameterdeclarations -> failure x
  More parameterdeclarations -> failure x
transParameter_declarations :: Parameter_declarations -> Result
transParameter_declarations x = case x of
  ParamDec parameterdeclaration -> failure x
  MoreParamDec parameterdeclarations parameterdeclaration -> failure x
transParameter_declaration :: Parameter_declaration -> Result
transParameter_declaration x = case x of
  OnlyType declarationspecifiers -> failure x
  TypeAndParam declarationspecifiers declarator -> failure x
  Abstract declarationspecifiers abstractdeclarator -> failure x
transInitializer :: Initializer -> Result
transInitializer x = case x of
  InitExpr exp -> failure x
  InitListOne initializers -> failure x
  InitListTwo initializers -> failure x
transInitializers :: Initializers -> Result
transInitializers x = case x of
  AnInit initializer -> failure x
  MoreInit initializers initializer -> failure x
transType_name :: Type_name -> Result
transType_name x = case x of
  PlainType specquals -> failure x
  ExtendedType specquals abstractdeclarator -> failure x
transAbstract_declarator :: Abstract_declarator -> Result
transAbstract_declarator x = case x of
  PointerStart pointer -> failure x
  Advanced dirabsdec -> failure x
  PointAdvanced pointer dirabsdec -> failure x
transDir_abs_dec :: Dir_abs_dec -> Result
transDir_abs_dec x = case x of
  WithinParentes abstractdeclarator -> failure x
  Array -> failure x
  InitiatedArray constantexpression -> failure x
  UnInitiated dirabsdec -> failure x
  Initiated dirabsdec constantexpression -> failure x
  OldFunction -> failure x
  NewFunction parametertype -> failure x
  OldFuncExpr dirabsdec -> failure x
  NewFuncExpr dirabsdec parametertype -> failure x
transStm :: Stm -> Result
transStm x = case x of
  LabelS labeledstm -> failure x
  CompS compoundstm -> failure x
  ExprS expressionstm -> failure x
  SelS selectionstm -> failure x
  IterS iterstm -> failure x
  JumpS jumpstm -> failure x
transLabeled_stm :: Labeled_stm -> Result
transLabeled_stm x = case x of
  SlabelOne ident stm -> failure x
  SlabelTwo constantexpression stm -> failure x
  SlabelThree stm -> failure x
transCompound_stm :: Compound_stm -> Result
transCompound_stm x = case x of
  ScompOne -> failure x
  ScompTwo stms -> failure x
  ScompThree decs -> failure x
  ScompFour decs stms -> failure x
transExpression_stm :: Expression_stm -> Result
transExpression_stm x = case x of
  SexprOne -> failure x
  SexprTwo exp -> failure x
transSelection_stm :: Selection_stm -> Result
transSelection_stm x = case x of
  SselOne exp stm -> failure x
  SselTwo exp stm1 stm2 -> failure x
  SselThree exp stm -> failure x
transIter_stm :: Iter_stm -> Result
transIter_stm x = case x of
  SiterOne exp stm -> failure x
  SiterTwo stm exp -> failure x
  SiterThree expressionstm1 expressionstm2 stm -> failure x
  SiterFour expressionstm1 expressionstm2 exp stm -> failure x
transJump_stm :: Jump_stm -> Result
transJump_stm x = case x of
  SjumpOne ident -> failure x
  SjumpTwo -> failure x
  SjumpThree -> failure x
  SjumpFour -> failure x
  SjumpFive exp -> failure x
transExp :: Exp -> Result
transExp x = case x of
  Ecomma exp1 exp2 -> failure x
  Eassign exp1 assignmentop exp2 -> failure x
  Econdition exp1 exp2 exp3 -> failure x
  Elor exp1 exp2 -> failure x
  Eland exp1 exp2 -> failure x
  Ebitor exp1 exp2 -> failure x
  Ebitexor exp1 exp2 -> failure x
  Ebitand exp1 exp2 -> failure x
  Eeq exp1 exp2 -> failure x
  Eneq exp1 exp2 -> failure x
  Elthen exp1 exp2 -> failure x
  Egrthen exp1 exp2 -> failure x
  Ele exp1 exp2 -> failure x
  Ege exp1 exp2 -> failure x
  Eleft exp1 exp2 -> failure x
  Eright exp1 exp2 -> failure x
  Eplus exp1 exp2 -> failure x
  Eminus exp1 exp2 -> failure x
  Etimes exp1 exp2 -> failure x
  Ediv exp1 exp2 -> failure x
  Emod exp1 exp2 -> failure x
  Etypeconv typename exp -> failure x
  Epreinc exp -> failure x
  Epredec exp -> failure x
  Epreop unaryoperator exp -> failure x
  Ebytesexpr exp -> failure x
  Ebytestype typename -> failure x
  Earray exp1 exp2 -> failure x
  Efunk exp -> failure x
  Efunkpar exp exps -> failure x
  Eselect exp ident -> failure x
  Epoint exp ident -> failure x
  Epostinc exp -> failure x
  Epostdec exp -> failure x
  Evar ident -> failure x
  Econst constant -> failure x
  Estring string -> failure x
transConstant :: Constant -> Result
transConstant x = case x of
  Efloat double -> failure x
  Echar char -> failure x
  Eunsigned unsigned -> failure x
  Elong long -> failure x
  Eunsignlong unsignedlong -> failure x
  Ehexadec hexadecimal -> failure x
  Ehexaunsign hexunsigned -> failure x
  Ehexalong hexlong -> failure x
  Ehexaunslong hexunslong -> failure x
  Eoctal octal -> failure x
  Eoctalunsign octalunsigned -> failure x
  Eoctallong octallong -> failure x
  Eoctalunslong octalunslong -> failure x
  Ecdouble cdouble -> failure x
  Ecfloat cfloat -> failure x
  Eclongdouble clongdouble -> failure x
  Eint integer -> failure x
  Elonger integer -> failure x
  Edouble double -> failure x
transConstant_expression :: Constant_expression -> Result
transConstant_expression x = case x of
  Especial exp -> failure x
transUnary_operator :: Unary_operator -> Result
transUnary_operator x = case x of
  Address -> failure x
  Indirection -> failure x
  Plus -> failure x
  Negative -> failure x
  Complement -> failure x
  Logicalneg -> failure x
transAssignment_op :: Assignment_op -> Result
transAssignment_op x = case x of
  Assign -> failure x
  AssignMul -> failure x
  AssignDiv -> failure x
  AssignMod -> failure x
  AssignAdd -> failure x
  AssignSub -> failure x
  AssignLeft -> failure x
  AssignRight -> failure x
  AssignAnd -> failure x
  AssignXor -> failure x
  AssignOr -> failure x

